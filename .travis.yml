env:
  global:
    - ROLE_NAME: autoarchive
  matrix:
    - distro: centos7
      init: /usr/lib/systemd/systemd
      run_opts: "--privileged --volume =/ sys/ fs/ cgroup:/ sys/ fs/ cgroup:r\ o"
      incron_service: incrond
    - distro: debian8
      init: /lib/systemd/systemd
      run_opts: "--privileged --volume =/ sys/ fs/ cgroup:/ sys/ fs/ cgroup:r\ o"
      incron_service: incron

before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

before_script:
  # Use actual Ansible Galaxy role name for the project directory.
  - cd ../
  - mv ansible-role-$ROLE_NAME bassinator.$ROLE_NAME
  - cd bassinator.$ROLE_NAME

script:
#start docker container
  - container_id=$(mktemp)
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/bassinator.autoarchive:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'
# check syntax
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/bassinator.autoarchive/tests/test.yml --syntax-check'
# check first run does not fail
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/bassinator.autoarchive/tests/test.yml'
# Run the role/ playbook again, checking to make sure it's idempotent.
  - idempotence=$(mktemp)
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/bassinator.autoarchive/tests/test.yml | tee -a ${idempotence}'
  - 'tail ${idempotence} | grep -q "changed=0.*failed=0" && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && exit 1)'
# functinal test of autoarchive
  - 'docker exec "$(cat ${container_id})" sudo -u vagrant incrontab -l'
  - 'docker exec "$(cat ${container_id})" service ${incron_service} status'
  - 'docker exec "$(cat ${container_id})" sudo -u vagrant touch /home/vagrant/testfile.sb2'
  - 'docker exec "$(cat ${container_id})" stat /home/vagrant/testfile.sb2'
  - 'docker exec "$(cat ${container_id})" ls /home/vagrant/archive/'
  - 'docker exec "$(cat ${container_id})" sudo -u vagrant sudo sh -c "echo hoi | tee -a /home/vagrant/testfile.sb2"'
  - 'docker exec "$(cat ${container_id})" stat /home/vagrant/testfile.sb2'
  - 'docker exec "$(cat ${container_id})" ls /home/vagrant/archive/'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
